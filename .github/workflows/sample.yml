name: Sample
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sample:
    name: Sample Use Case
    runs-on: ubuntu-latest
    steps:
      - name: Install Package
        id: install-package
        shell: pwsh
        run: |
          # NOTE: You can change where the module is stored.
          #       Default Path : /home/runner/work/UnityPackageArchiver/UnityPackageArchiver
          Write-Output "defaultPSModulePath=${env:PSModulePath}" | Tee-Object -FilePath ${env:GITHUB_OUTPUT} -Append
          $env:PSModulePath = '${{ github.workspace }}/UnityPackageArchiver'
          Import-Module PowerShellGet -Force
          New-Item -Path $env:PSModulePath -ItemType Directory -Force

          # NOTE: Modules can be used in the same job.
          Install-Module -Name UnityPackageArchiver -Force

          # check available module
          Get-Module -ListAvailable UnityPackageArchiver

      # for checkout SampleData
      - name: Check out
        uses: actions/checkout@v4

      - name: Use Expand-UnityPackage
        shell: pwsh
        run: |
          Expand-UnityPackage -UnityPackagePath ./Tests/Data/Expand/Input/sample.unitypackage -OutputDir ./Tests/Data/Expand/Output

      - name: Use Compress-UnityPackage
        shell: pwsh
        run: |
          Compress-UnityPackage `
                -OutputFilePath "./Tests/Data/Compress/Output/Sample.unitypackage" `
                -TargetFiles "./Tests/Data/Compress/Input/Assets/Prefabs/GameObject.prefab", `
                "./Tests/Data/Compress/Input/Assets/Scenes/SampleScene.unity", `
                "./Tests/Data/Compress/Input/Assets/Scripts/Sample.cs", `
                "./Tests/Data/Compress/Input/Assets/Scripts/Editor/SampleEditor.cs", `
                "./Tests/Data/Compress/Input/Assets/Sprites/logo.png", `
                "./Tests/Data/Compress/Input/Assets/Sprites/note.pdf"

      - name: Uninstall Package
        shell: pwsh
        run: |
          Uninstall-Module -Name UnityPackageArchiver -AllVersions -Force
          $env:PSModulePath = '${{ steps.install-package.outputs.defaultPSModulePath }}'
